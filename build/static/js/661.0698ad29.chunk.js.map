{"version":3,"file":"static/js/661.0698ad29.chunk.js","mappings":"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","sources":["components/Cards.js","components/Result.js","components/Hover.js","components/ToolTip.js","utils/api.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeConsumer } from '../contexts/theme'\r\n\r\nexport default function Cards({ header, subheader, avatar, href, name, children }) {\r\n  return (\r\n    <ThemeConsumer>\r\n      {({ theme }) => (\r\n        <div className={`card bg-${theme}`}>\r\n          <h4 className='header-lg center-text'>\r\n            {header}\r\n          </h4>\r\n          <img src={avatar} \r\n            alt={`Avatar for ${name}`}\r\n            className=\"avatar\" \r\n          />\r\n          {subheader && (\r\n            <h4 className=\"center-text\">\r\n              {subheader}\r\n            </h4>  \r\n          )}\r\n          <h2 className=\"center-text\">\r\n            <a href={href} \r\n              target='_blank' \r\n              rel=\"noreferrer noopener\"\r\n              className=\"link\" \r\n            >\r\n              {name}\r\n            </a>\r\n          </h2>\r\n          {children}\r\n        </div>\r\n      )}\r\n    </ThemeConsumer>\r\n  )\r\n}\r\n\r\nCards.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n  subheader: PropTypes.string,\r\n  avatar: PropTypes.string.isRequired,\r\n  href: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired\r\n}","/* import React, { Component } from 'react'\r\nimport { battle } from '../utils/api'\r\nimport { FaCompass, FaBriefcase, FaCode, FaUsers, FaUser,FaUserFriends} from 'react-icons/fa'\r\nimport Cards from './Cards'\r\n\r\nexport default class Result extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      winner: null,\r\n      loser: null,\r\n      error: null,\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { playerOne, playerTwo } = this.props\r\n\r\n    battle([ playerOne, playerTwo ])\r\n      .then((players) => {\r\n      this.setState({\r\n        winner: players[0],\r\n        loser: players[1],\r\n        error: null,\r\n        loading: false\r\n      })\r\n    }).catch(({ message }) => {\r\n      this.setState({\r\n        error: message,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n\r\n    const {winner, loser, error, loading} = this.state\r\n\r\n    if(loading === true) {\r\n      return <p>LOADING...</p>\r\n    }\r\n\r\n    if(error) {\r\n      return  (\r\n        <p className='center-text error'>‚ùó{error}</p> \r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className='grid space-around container-sm'>\r\n        <Cards \r\n          header={winner.score === loser.score ? 'Tie' : 'winner'}\r\n          subheader={`Score: ${winner.score.toLocaleString()}`}\r\n          avatar={winner.profile.avatar_url}\r\n          href={winner.profile.html_url}\r\n          name={winner.profile.login} >\r\n\r\n            <ul className=\"card-list\">\r\n              <li>\r\n                <FaUser color='rgb(239, 115, 115)' size={22} />{winner.profile.name}\r\n              </li>\r\n              {winner.profile.location && (\r\n                <li>\r\n                  <FaCompass color='#795548' size={22}/> {winner.profile.location}\r\n                </li>\r\n              )}\r\n              {winner.profile.company && (\r\n                <li>\r\n                  <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {winner.profile.company}\r\n                </li>\r\n              )}\r\n              <li>\r\n                <FaUsers color='rgb(129, 195, 245)' size={22} />{winner.profile.followers.toLocaleString()} followers\r\n              </li>\r\n              <li>\r\n                <FaUserFriends color='rgb(64, 183, 95)' size={22} />{winner.profile.following.toLocaleString()} following\r\n              </li>\r\n            </ul>\r\n\r\n        </Cards>\r\n\r\n        <Cards\r\n          header={winner.score === loser.score ? 'Tie' : 'loser'}\r\n          subheader={`Score: ${loser.score.toLocaleString()}`}\r\n          avatar={loser.profile.avatar_url}\r\n          href={loser.profile.html_url}\r\n          name={loser.profile.login}>\r\n\r\n          <ul className=\"card-list\">\r\n            <li>\r\n              <FaUser color='rgb(239, 115, 115)' size={22} />{loser.profile.name}\r\n            </li>\r\n            {loser.profile.location && (\r\n              <li>\r\n                <FaCompass color='#795548' size={22}/> {loser.profile.location}\r\n              </li>\r\n            )}\r\n            {loser.profile.company && (\r\n              <li>\r\n                <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {loser.profile.company}\r\n              </li>\r\n            )}\r\n            <li>\r\n              <FaUsers color='rgb(129, 195, 245)' size={22} />{loser.profile.followers.toLocaleString()} followers\r\n            </li>\r\n            <li>\r\n              <FaUserFriends color='rgb(64, 183, 95)' size={22} />{loser.profile.following.toLocaleString()} following\r\n            </li>\r\n          </ul>\r\n\r\n        </Cards>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n */\r\n\r\n\r\nimport React, { Component, Fragment } from 'react'\r\nimport { battle } from '../utils/api'\r\nimport { FaCompass, FaBriefcase, FaUsers, FaUser,FaUserFriends} from 'react-icons/fa'\r\nimport Cards from './Cards'\r\nimport PropTypes from 'prop-types'\r\nimport Loading from './Loading'\r\nimport ToolTip from './ToolTip'\r\nimport queryString from 'query-string'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ProfileList({ profile }) {\r\n  return (\r\n    <ul className=\"card-list\">\r\n      <li>\r\n      <ToolTip text=\"Github Username\">\r\n        <FaUser color='rgb(239, 115, 115)' size={22} />{profile.name}\r\n        </ToolTip>\r\n      </li>\r\n      {profile.location && (\r\n        <li>\r\n          <ToolTip text=\"User's Location\">\r\n            <FaCompass color='#795548' size={22}/> {profile.location}\r\n          </ToolTip>\r\n        </li>\r\n      )}\r\n      {profile.company && (\r\n        <li>\r\n          <ToolTip text=\"User's Company\">\r\n            <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {profile.company}\r\n          </ToolTip>\r\n        </li>\r\n      )}\r\n      <li>\r\n        <FaUsers color='rgb(129, 195, 245)' size={22} />{profile.followers.toLocaleString()} followers\r\n      </li>\r\n      <li>\r\n        <FaUserFriends color='rgb(64, 183, 95)' size={22} />{profile.following.toLocaleString()} following\r\n      </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\n\r\n/****\r\n <ul className=\"card-list\">\r\n   <li>\r\n      <FaUser color='rgb(239, 115, 115)' size={22} />{profile.name}\r\n    </li>\r\n    {profile.location && (\r\n      <li>\r\n        <FaCompass color='#795548' size={22}/> {profile.location}\r\n      </li>\r\n    )}\r\n    {profile.company && (\r\n      <li>\r\n        <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {profile.company}\r\n      </li>\r\n    )}\r\n    <li>\r\n      <FaUsers color='rgb(129, 195, 245)' size={22} />{profile.followers.toLocaleString()} followers\r\n    </li>\r\n    <li>\r\n      <FaUserFriends color='rgb(64, 183, 95)' size={22} />{profile.following.toLocaleString()} following\r\n    </li>\r\n  </ul> \r\n*/\r\n\r\n\r\nProfileList.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default class Result extends Component {\r\n  state = {\r\n    winner: null,\r\n    loser: null,\r\n    error: null,\r\n    loading: true\r\n  }\r\n  \r\n  componentDidMount () {\r\n    const { playerOne, playerTwo } = queryString.parse(this.props.location.search)\r\n\r\n    battle([ playerOne, playerTwo ])\r\n      .then((players) => {\r\n      this.setState({\r\n        winner: players[0],\r\n        loser: players[1],\r\n        error: null,\r\n        loading: false\r\n      })\r\n    }).catch(({ message }) => {\r\n      this.setState({\r\n        error: message,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n\r\n    const { winner, loser, error, loading } = this.state\r\n\r\n    if(loading === true) {\r\n      return <Loading text='Battling' speed={500} />\r\n    }\r\n\r\n    if(error) {\r\n      return  (\r\n        <p className='center-text error'>‚ùó {error}</p> \r\n      )\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className='grid space-around container-sm'>\r\n\r\n          <Cards \r\n            header={winner.score === loser.score ? 'Tie' : 'Winner'}\r\n            subheader={`Score: ${winner.score.toLocaleString()}`}\r\n            avatar={winner.profile.avatar_url}\r\n            href={winner.profile.html_url}\r\n            name={winner.profile.login}\r\n          >\r\n            <ProfileList profile={winner.profile} />\r\n          </Cards>\r\n\r\n          <Cards\r\n            header={winner.score === loser.score ? 'Tie' : 'Loser'}\r\n            subheader={`Score: ${loser.score.toLocaleString()}`}\r\n            avatar={loser.profile.avatar_url}\r\n            name={loser.profile.login}\r\n            href={loser.profile.html_url}\r\n          >\r\n            <ProfileList profile={loser.profile} />\r\n          </Cards>\r\n\r\n        </div>\r\n        <Link \r\n          className='btn btn-dark btn-space'\r\n          to='/battle'\r\n        >\r\n            Reset\r\n        </Link>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n|--------------------------------------------------\r\n| /* import React, { Component } from 'react'\r\nimport { battle } from '../utils/api'\r\nimport { FaCompass, FaBriefcase, FaCode, FaUsers, FaUser,FaUserFriends} from 'react-icons/fa'\r\nimport Cards from './Cards'\r\n\r\nexport default class Result extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      winner: null,\r\n      loser: null,\r\n      error: null,\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { playerOne, playerTwo } = this.props\r\n\r\n    battle([ playerOne, playerTwo ])\r\n      .then((players) => {\r\n      this.setState({\r\n        winner: players[0],\r\n        loser: players[1],\r\n        error: null,\r\n        loading: false\r\n      })\r\n    }).catch(({ message }) => {\r\n      this.setState({\r\n        error: message,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n\r\n    const {winner, loser, error, loading} = this.state\r\n\r\n    if(loading === true) {\r\n      return <p>LOADING...</p>\r\n    }\r\n\r\n    if(error) {\r\n      return  (\r\n        <p className='center-text error'>‚ùó{error}</p> \r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className='grid space-around container-sm'>\r\n        <Cards \r\n          header={winner.score === loser.score ? 'Tie' : 'winner'}\r\n          subheader={`Score: ${winner.score.toLocaleString()}`}\r\n          avatar={winner.profile.avatar_url}\r\n          href={winner.profile.html_url}\r\n          name={winner.profile.login} >\r\n\r\n            <ul className=\"card-list\">\r\n              <li>\r\n                <FaUser color='rgb(239, 115, 115)' size={22} />{winner.profile.name}\r\n              </li>\r\n              {winner.profile.location && (\r\n                <li>\r\n                  <FaCompass color='#795548' size={22}/> {winner.profile.location}\r\n                </li>\r\n              )}\r\n              {winner.profile.company && (\r\n                <li>\r\n                  <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {winner.profile.company}\r\n                </li>\r\n              )}\r\n              <li>\r\n                <FaUsers color='rgb(129, 195, 245)' size={22} />{winner.profile.followers.toLocaleString()} followers\r\n              </li>\r\n              <li>\r\n                <FaUserFriends color='rgb(64, 183, 95)' size={22} />{winner.profile.following.toLocaleString()} following\r\n              </li>\r\n            </ul>\r\n\r\n        </Cards>\r\n\r\n        <Cards\r\n          header={winner.score === loser.score ? 'Tie' : 'loser'}\r\n          subheader={`Score: ${loser.score.toLocaleString()}`}\r\n          avatar={loser.profile.avatar_url}\r\n          href={loser.profile.html_url}\r\n          name={loser.profile.login}>\r\n\r\n          <ul className=\"card-list\">\r\n            <li>\r\n              <FaUser color='rgb(239, 115, 115)' size={22} />{loser.profile.name}\r\n            </li>\r\n            {loser.profile.location && (\r\n              <li>\r\n                <FaCompass color='#795548' size={22}/> {loser.profile.location}\r\n              </li>\r\n            )}\r\n            {loser.profile.company && (\r\n              <li>\r\n                <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {loser.profile.company}\r\n              </li>\r\n            )}\r\n            <li>\r\n              <FaUsers color='rgb(129, 195, 245)' size={22} />{loser.profile.followers.toLocaleString()} followers\r\n            </li>\r\n            <li>\r\n              <FaUserFriends color='rgb(64, 183, 95)' size={22} />{loser.profile.following.toLocaleString()} following\r\n            </li>\r\n          </ul>\r\n\r\n        </Cards>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n */\r\n\r\n/*\r\nimport React, { Component } from 'react'\r\nimport { battle } from '../utils/api'\r\nimport { FaCompass, FaBriefcase, FaCode, FaUsers, FaUser,FaUserFriends} from 'react-icons/fa'\r\nimport Cards from './Cards'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction ProfileList({ profile }) {\r\n  return (\r\n    <ul className=\"card-list\">\r\n    <li>\r\n      <FaUser color='rgb(239, 115, 115)' size={22} />{profile.name}\r\n    </li>\r\n    {profile.location && (\r\n      <li>\r\n        <FaCompass color='#795548' size={22}/> {profile.location}\r\n      </li>\r\n    )}\r\n    {profile.company && (\r\n      <li>\r\n        <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {profile.company}\r\n      </li>\r\n    )}\r\n    <li>\r\n      <FaUsers color='rgb(129, 195, 245)' size={22} />{profile.followers.toLocaleString()} followers\r\n    </li>\r\n    <li>\r\n      <FaUserFriends color='rgb(64, 183, 95)' size={22} />{profile.following.toLocaleString()} following\r\n    </li>\r\n  </ul>\r\n\r\n\r\n/*   <ul className=\"card-list\">\r\n    <li>\r\n      <FaUser color='rgb(239, 115, 115)' size={22} />{profile.name}\r\n    </li>\r\n    {profile.location && (\r\n      <li>\r\n        <FaCompass color='#795548' size={22}/> {profile.location}\r\n      </li>\r\n    )}\r\n    {profile.company && (\r\n      <li>\r\n        <FaBriefcase color='rgb(144, 116, 255)' size={22}/> {profile.company}\r\n      </li>\r\n    )}\r\n    <li>\r\n      <FaUsers color='rgb(129, 195, 245)' size={22} />{profile.followers.toLocaleString()} followers\r\n    </li>\r\n    <li>\r\n      <FaUserFriends color='rgb(64, 183, 95)' size={22} />{profile.following.toLocaleString()} following\r\n    </li>\r\n  </ul> */ \r\n  \r\n  \r\n  /*\r\n  )\r\n}\r\n\r\nProfileList.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n}\r\n\r\nexport default class Result extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      winner: null,\r\n      loser: null,\r\n      error: null,\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { playerOne, playerTwo } = this.props\r\n\r\n    battle([ playerOne, playerTwo ])\r\n      .then((players) => {\r\n      this.setState({\r\n        winner: players[0],\r\n        loser: players[1],\r\n        error: null,\r\n        loading: false\r\n      })\r\n    }).catch(({ message }) => {\r\n      this.setState({\r\n        error: message,\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n\r\n    const {winner, loser, error, loading} = this.state\r\n\r\n    if(loading === true) {\r\n      return <p>LOADING...</p>\r\n    }\r\n\r\n    if(error) {\r\n      return  (\r\n        <p className='center-text error'>‚ùó{error}</p> \r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className='grid space-around container-sm'>\r\n        <Cards \r\n          header={winner.score === loser.score ? 'Tie' : 'winner'}\r\n          subheader={`Score: ${winner.score.toLocaleString()}`}\r\n          avatar={winner.profile.avatar_url}\r\n          href={winner.profile.html_url}\r\n          name={winner.profile.login}\r\n        >\r\n          <ProfileList profile={winner.profile} />\r\n        </Cards>\r\n\r\n        <Cards\r\n          header={winner.score === loser.score ? 'Tie' : 'loser'}\r\n          subheader={`Score: ${loser.score.toLocaleString()}`}\r\n          avatar={loser.profile.avatar_url}\r\n          href={loser.profile.html_url}\r\n          name={loser.profile.login}\r\n        >\r\n          <ProfileList profile={loser.profile} />\r\n        </Cards>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n|--------------------------------------------------\r\n*/","import React from 'react'\r\n\r\nclass Hover extends React.Component {\r\n  state = { hovering: false }\r\n\r\n  mouseOver = () => { this.setState({ hovering: true }) }\r\n  mouseOut = () => { this.setState({ hovering: false }) }\r\n    render () {\r\n\r\n  return (\r\n    <div onMouseOver={this.mouseOver} onMouseOut={this.mouseOut}>\r\n      {this.props.children(this.state.hovering)}\r\n    </div>\r\n  )}\r\n}\r\nexport default Hover","import React, { /* Component */ } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Hover from './Hover'\r\n// import withHover from './withHover'\r\n\r\nconst styles = {\r\n    container: {\r\n      position: 'relative',\r\n      display: 'flex'\r\n    },\r\n    tooltip: {\r\n      boxSizing: 'border-box',\r\n      position: 'absolute',\r\n      width: '8.5rem',\r\n      bottom: '1005',\r\n      left: '50%',\r\n      marginLeft: '-3.5rem',\r\n      borderRadius: '.2rem',\r\n      backgroundColor: 'hsla(0, 0%, 20%, 0.9)',\r\n      padding: '.5rem',\r\n      marginBottom: '.4rem',\r\n      color: '#fff',\r\n      textAlign: 'center',\r\n      fontSize: '.9rem',\r\n      textTransform: 'capitalize'\r\n    }\r\n  }\r\n  \r\n\r\n// class ToolTip extends Component {\r\n    \r\n//   render() {\r\n//     const { hovering } = this.state\r\n//     const { text, children } = this.props\r\n\r\n//     return (\r\n//         <div \r\n//             onMouseOver={this.mouseOver}\r\n//             onMouseOut={this.mouseOut} \r\n//             style={styles.container}\r\n//         >\r\n//             {hovering === true && <div style={styles.tooltip}>{text}</div>}\r\n//             {children}\r\n//         </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// Solving the problem we had with withHover component which was name inclusion\r\nfunction ToolTip({ text, children }) {\r\n  return (\r\n    <Hover>\r\n    {( hovering ) => (\r\n      <div style={styles.container} >\r\n        {hovering === true && <div style={styles.tooltip}>{text}</div>}\r\n            {children}\r\n      </div>\r\n    )}\r\n    </Hover>\r\n    \r\n  )\r\n}\r\n\r\n\r\nToolTip.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n}\r\n\r\nToolTip.defaultProp = {\r\n    text: 'User\\'s '\r\n}\r\n\r\n// export default withHover(ToolTip, 'hovering');\r\nexport default ToolTip\r\n","/* const id = 'YOUR_CLIENT_ID'\r\nconst secret = 'YOUR_SECRET_ID'\r\nconst params = `?client_id=${id}&client_secret=${secret}`\r\n\r\nfunction getErrorMsg( message, username ) {\r\n    if (message === 'Not Found') {\r\n        return `${username} doesn't exist`\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nfunction getProfile(username) {\r\n    return fetch(`https://api.github.com/users/${username}${params}`)\r\n        .then((res) => res.json())\r\n        .then((profile) => {\r\n            if(profile.message) {\r\n                throw new Error(getErrorMsg(profile.message, username))\r\n            }\r\n        return profile\r\n    })\r\n}\r\n\r\nfunction getRepos (username) {\r\n    return fetch(`https://api.github.com/users/${username}/repos${params}&per_page=100`)\r\n        .then((res) => res.json())\r\n        .then((repos) => {\r\n            if(repos.message) {\r\n                throw new Error(getErrorMsg(repos.message, username))\r\n            }\r\n\r\n            return repos\r\n        })\r\n}\r\n\r\nfunction getStarCount(repos) {\r\n    return repos.reduce((count, { stargazers_count }) => count + stargazers_count , 0)\r\n}\r\n\r\nfunction calculateScore(followers, repos) {\r\n    return (followers * 3) + getStarCount(repos)\r\n}\r\n\r\nfunction getStarCount(repos) {\r\n    return repos.reduce((count, { stargazers_count }) => count + stargazers_count , 0)\r\n}\r\n\r\nfunction getUserData(player) {\r\n    return Promise.all([\r\n        getProfile(player),\r\n        getRepos(player)\r\n    ]).then(([ profile, repos ]) => ({\r\n        profile,\r\n        score: calculateScore( profile.followers, repos )\r\n    }))\r\n}\r\n\r\n\r\n\r\nfunction sortPlayers (players) {\r\n    return players.sort(( a, b ) => b.score - a.score)\r\n}\r\n\r\nexport function battle ( players ) {\r\n    return Promise.all([\r\n        getUserData(players[0]),\r\n        getUserData(players[1])\r\n    ]).then((results) => sortPlayers(results))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n */\r\n\r\n\r\nconst id  = \"YOUR_CLIENT_ID\"\r\nconst sec = \"YOUR_SECRET_ID\"\r\nconst params = `?client_id=${id}&client_secret=${sec}`\r\n\r\n\r\nfunction getErrorMsg (message, username) {\r\n  if(message === 'Not Found') {\r\n    return `${username} doesn't exist`\r\n  }\r\n  return message\r\n}\r\n\r\nfunction getProfile (username) {\r\n  return fetch(`https://api.github.com/users/${username}${params}`)\r\n    .then((res) => res.json())\r\n    .then((profile) => {\r\n      if (profile.message) {\r\n        throw new Error(getErrorMsg(profile.message, username))\r\n      }\r\n    return profile   \r\n  })      \r\n}\r\n\r\nfunction getRepos (username) {\r\n  return fetch(`https://api.github.com/users/${username}/repos${params}&per_page=100`)\r\n    .then((res) => res.json())\r\n    .then((repos) => {\r\n      if(repos.message) {\r\n        throw new Error(getErrorMsg(repos.message, username))\r\n      }\r\n    return repos\r\n  })\r\n}\r\n\r\nfunction getStarCount(repos){\r\n  return  repos.reduce((count, { stargazers_count }) => count + stargazers_count , 0)\r\n}\r\n\r\nfunction calculateScore(followers, repos) {\r\n  return (followers * 3) + getStarCount(repos)\r\n}\r\n\r\nfunction getUserData(player) {\r\n  return Promise.all([\r\n    getProfile(player),\r\n    getRepos(player)\r\n  ]).then(([ profile, repos ]) => ({ profile,\r\n      score: calculateScore(profile.followers, repos)\r\n  }))\r\n}\r\n\r\nfunction sortPlayers(players) {\r\n  return players.sort((a, b) => b.score - a.score)\r\n}\r\nexport function battle(players) {\r\n  return Promise.all([\r\n    getUserData(players[0]),\r\n    getUserData(players[1])\r\n  ]).then((results) => sortPlayers(results))\r\n}\r\n\r\nexport function fetchPopularRepos (language) {\r\n\r\n  const endpoint = window.encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\r\n\r\n  return fetch(endpoint)\r\n  .then((res) => res.json())\r\n  .then((data) => {\r\n    if (!data.items) {\r\n      throw new Error(data.message)\r\n    }\r\n\r\n    return data.items\r\n  })\r\n}\r\n\r\n/* \r\nconst id = 'YOUR_CLIENT_ID'\r\nconst secret = 'YOUR_SECRET_ID'\r\nconst params = `?client_id=${id}&client_secret=${secret}`\r\n\r\nfunction getErrorMsg( message, username ) {\r\n    if (message === 'Not Found') {\r\n        return `${username} doesn't exist`\r\n    }\r\n\r\n    return message\r\n}\r\n\r\nasync function getProfile( username ) {\r\n    const res = await fetch(`https://api.github.com/users/${username}${params}`)\r\n    const profile = await res.json()\r\n    if (profile.message) {\r\n        throw new Error(getErrorMsg(profile.message, username))\r\n    }\r\n    return profile\r\n}\r\n\r\nfunction getRepos( username ) {\r\n    fetch(`https://api.github.com/users/${username}/repos${params}&per_page=100`)\r\n        .then(( res ) => res.json())\r\n        .then(( repos ) => {\r\n            if(repos.message) {\r\n                throw new Error(getErrorMsg(repos.message, username))\r\n            }\r\n\r\n            return repos\r\n        })\r\n}\r\n\r\nfunction getUserData() {\r\n    \r\n}\r\n\r\nexport async function fetchPopularRepos (language) {\r\n\r\n    const endpoint = window.encodeURI(`https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`)\r\n\r\n    const res = await fetch(endpoint)\r\n    const data = await res.json()\r\n    if (!data.items) {\r\n        throw new Error(data.message)\r\n    }\r\n    return data.items\r\n}\r\n*/"],"names":["Cards","header","subheader","avatar","href","name","children","theme","className","src","alt","target","rel","ProfileList","profile","text","color","size","location","company","followers","toLocaleString","following","Result","state","winner","loser","error","loading","queryString","this","props","search","playerOne","playerTwo","battle","then","players","setState","catch","message","speed","Fragment","score","avatar_url","html_url","login","to","Component","Hover","hovering","mouseOver","mouseOut","onMouseOver","onMouseOut","React","styles","container","position","display","tooltip","boxSizing","width","bottom","left","marginLeft","borderRadius","backgroundColor","padding","marginBottom","textAlign","fontSize","textTransform","ToolTip","style","defaultProp","params","getErrorMsg","username","getRepos","fetch","res","json","repos","Error","calculateScore","reduce","count","stargazers_count","getStarCount","getUserData","player","Promise","all","results","sort","a","b","sortPlayers","fetchPopularRepos","language","endpoint","window","encodeURI","data","items"],"sourceRoot":""}